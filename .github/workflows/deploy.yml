name: Build & Deploy (Vite Vue TS)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

defaults:
  run:
    working-directory: myapp

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      HOST: ${{ vars.SSH_HOST || secrets.SSH_HOST }}
      PORT: ${{ vars.SSH_PORT || secrets.SSH_PORT }}
      USER: ${{ vars.SSH_USER || secrets.SSH_USER }}
      REMOTE_PATH: ${{ vars.REMOTE_PATH || secrets.REMOTE_PATH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Build
        run: pnpm build

      - name: Sanity check CI inputs
        run: |
          set -euxo pipefail
          : "${HOST:=}"
          : "${PORT:=}"
          : "${USER:=}"
          : "${REMOTE_PATH:=}"
          HOST="$(printf %s "$HOST" | tr -d '\r' | sed -e 's/[[:space:]]\+$//')"
          PORT="$(printf %s "$PORT" | tr -d '\r' | sed -e 's/[[:space:]]\+$//')"
          USER="$(printf %s "$USER" | tr -d '\r' | sed -e 's/[[:space:]]\+$//')"
          REMOTE_PATH="$(printf %s "$REMOTE_PATH" | tr -d '\r' | sed -e 's/[[:space:]]\+$//')"
          # ensure PORT is numeric if provided
          if [ -n "$PORT" ] && ! echo "$PORT" | grep -Eq '^[0-9]+$'; then echo "PORT is not numeric: '$PORT'"; exit 1; fi
          echo "HOST=${HOST:-<empty>}"
          echo "PORT=${PORT:-<empty>} (will default to 22 if empty)"
          echo "USER=${USER:-<empty>}"
          echo "REMOTE_PATH=${REMOTE_PATH:-<empty>}"
          if [ -z "${HOST}" ] || [ -z "${USER}" ] || [ -z "${REMOTE_PATH}" ]; then
            echo "Missing required repo Variables. Set SSH_HOST, SSH_USER, REMOTE_PATH (and SSH_PORT optionally) under Settings → Secrets and variables → Actions → Variables."; exit 1; fi
          if [ -z "${PORT}" ]; then PORT=22; fi
          echo "Using PORT=$PORT"
          {
            echo "PORT=$PORT"
            echo "HOST=$HOST"
            echo "USER=$USER"
            echo "REMOTE_PATH=$REMOTE_PATH"
          } >> "$GITHUB_ENV"

      - name: Add SSH key
        run: |
          set -euxo pipefail
          install -m 700 -d ~/.ssh
          cat > ~/.ssh/id_ed25519 <<'EOF'
          ${{ secrets.SSH_KEY }}
          EOF
          sed -i 's/\r$//' ~/.ssh/id_ed25519
          [ -s ~/.ssh/id_ed25519 ] || { echo "SSH_KEY is empty. Add it under Settings → Secrets and variables → Actions → Secrets with name SSH_KEY"; exit 1; }
          chmod 600 ~/.ssh/id_ed25519
          echo "Scanning host key for $HOST:$PORT"
          ssh-keyscan -p "${PORT}" "${HOST}" > ~/.ssh/known_hosts

      - name: Deploy dist/ via rsync
        run: |
          set -euxo pipefail
          rsync -avz --delete \
            -e "ssh -p ${PORT} -i ~/.ssh/id_ed25519" \
            dist/ "${USER}@${HOST}:${REMOTE_PATH}/"